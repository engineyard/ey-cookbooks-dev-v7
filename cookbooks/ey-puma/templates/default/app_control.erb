#!/bin/bash
# Auto-generated by Chef; your changes will be overwritten!

# Pull in a full environment and include some configuration of said commands.

# This can be ran by deploy user or root

source /etc/profile
source /data/<%= @app_name %>/shared/config/env
<% if @customvar %>
source /data/<%= @app_name %>/shared/config/env.custom
<% end %>
<% if @cloudvar %>
source /data/<%= @app_name %>/shared/config/env.cloud
<% end %>


ACTION="$1"

is_running() {
  
  if [[ `systemctl status puma_<%= @app_name %> |grep running` ]]; then return 0; fi
  return 1
}


status() {
    cd ${current_path}
    pumactl -S /var/run/engineyard/<%= @app_name %>/puma_<%= @app_name %>.state stats
}

start() {
  if is_running ; then
    echo "ERROR: Puma for <%= @app_name %> is already running"
    exit 1
  fi

  systemctl start puma_<%= @app_name %>.socket puma_<%= @app_name %>.service

}

deploy() {
  for PORT in <%= @port %>; do
    if is_running ; then
      echo "Hot deploying Puma for ${application} on port $PORT (pid: ${current_pid}) ..."
      cd ${current_path}
      pumactl -S --state /var/run/engineyard/<%= @app_name %>/puma_<%= @app_name %>.state restart && echo " hot deploy in progress."
    else
      start
    fi
  done
}

stop() {
  if is_running ; then
    echo "Stopping Puma for ${application} ..."
    systemctl stop puma_<%= @app_name %>
    exit 1
  else
    echo "ERROR: Doesn't seem puma is running for <%= @app_name %>"
    exit 1
  fi
}

restart() {
  systemctl restart puma_<%= @app_name %>.socket puma_<%= @app_name %>.service
}


case "$ACTION" in
  deploy)
    deploy
    ;;
  stop)
    stop
    ;;
  start)
    start
    ;;
  status)
    status
    ;;
  restart)
    deploy
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|deploy}"
    exit 1
    ;;
esac

exit 0
