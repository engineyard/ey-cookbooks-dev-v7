ey_cloud_report "cron" do
  message "processing crontabs"
  only_if "#{node['dna']['crons'].empty?}"
end

framework = node.engineyard.environment["framework_env"]

# We create an array of users and then loop through it to create an set up cron.
# We remove the ignore-cron as we only want the variables we set in place rather than the cron itself
# In the past we used bash to set these and this way seems cleaner and requires less code

["root", node["owner_name"]].each do |user|
  cron "# Do not edit this file directly as it will be overwritten by chef" do
    command "ignore-cron"
    hour "0"
    day "31"
    month "2"
    user user
    environment ({ "PATH" => "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin", "RAILS_ENV" => framework, "RACK_ENV" => framework, "PHP_ENV" => framework, "NODE_ENV" => framework })
  end

  execute "add environment variables to user's cron" do
    command "sed -i '/ignore-cron/c\n' /var/spool/cron/crontabs/#{user}"
  end
end

unless node["dna"]["instance_role"] == "app"
  cron "ey-snapshots" do
    minute   node["snapshot_minute"]
    hour     node["snapshot_hour"]
    day      "*"
    month    "*"
    weekday  "*"
    command  "ey-snapshots --snapshot >> /var/log/ey-snapshots.log"
    not_if { node["backup_window"].to_s == "0" }
  end
end

include_recipe "ey-cron::ui"

include_recipe "ey-ntp::cronjobs"

directory "/etc/systemd/system/cron.service.d" do
  owner "root"
  group "root"
  mode "0755"
  recursive true
end

cookbook_file "/etc/systemd/system/cron.service.d/override.conf" do
  source "cron_override.conf"
  owner "root"
  group "root"
  mode "0644"
  notifies :run, "execute[reload-systemd]", :delayed
end